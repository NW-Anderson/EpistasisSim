# scale_x_continuous(breaks = sort(unique(plotdat$Proportion))) +
theme(panel.grid = element_blank()) +
scale_fill_manual("Group",values=turbo(11)[c(1,4,6,9,11)],
limits = c("alpha = - 36.5", "Directional QT",
"Multiplicative\n(alpha = 0)",
"Positive Epistasis\n(alpha = 36.5)",
"Empirical")) +
geom_point(aes(shape=as.factor(Generation),
colour=Group,
y=Prop),
stat="identity",
position="identity",
alpha=0.6,
size=4) +
geom_point(data=inv.point,
aes(shape=as.factor(Generation),
colour=Group,
y=Prop),
stat="identity",
position="identity",
alpha=0,
size=4) +
guides(shape=guide_legend(title = "Generation",
override.aes = list(alpha=1))) +
guides(color="none")
?guides
###################################
## Main: Replicate Freq Spectrum ##
###################################
setwd("~/Documents/GitHub/EpistasisSim/SFS")
load(file = "sim.results.RData")
plotdat <- data.frame("Group" = c(rep("B. Multiplicative", length(sim.results$`alpha=0`)),
rep("C. Positive Epistasis", length(sim.results$`alpha=36.5629892630851`)),
rep("A. Directional QT", length(sim.results$directional)),
rep("D. Empirical", length(sim.results$empirical))),
"Proportion" = c(sim.results$`alpha=0`,
sim.results$`alpha=36.5629892630851`,
sim.results$directional,
sim.results$empirical))
plotdat$Group <- factor(plotdat$Group,
levels = sort(unique(plotdat$Group)),
labels = c("Directional QT",
"Multiplicative\n(alpha = 0)",
"Positive Epistasis\n(alpha = 36.5)",
"Empirical"))
###################################
# ggplot(plotdat, aes(x=Proportion, fill=Group)) +
#   geom_histogram(aes(y=..density..),
#                  stat="bin",
#                  position=position_dodge2(reverse = FALSE,preserve ="single"),
#                  alpha=1,
#                  breaks = sort(c(unique(plotdat$Proportion) + 0.045,
#                                  unique(plotdat$Proportion) - 0.045)),
#                  center = 1) +
#   theme_bw() +
#   theme(text=element_text(family="sans",
#                           face="plain",
#                           color="#000000",
#                           size=15, hjust=0.5, vjust=0.5)) +
#   guides(fill=guide_legend(title="Fitness Function")) +
#   xlab("Proportion") +
#   ylab("Density") +
#   scale_fill_manual("Group",values=turbo(11)[c(4,6,9,11)]) +
#   scale_x_continuous(breaks = sort(unique(plotdat$Proportion))) +
#   theme(panel.grid = element_blank())
plotdat2 <- plotdat %>%
dplyr::count(Proportion, Group) %>%
complete(Group, Proportion, fill = list(n=0)) %>%
group_by(Group) %>%
mutate(Prop = n/sum(n))
plotdat2$Generation <- rep(10, times = 36)
inv.point <-  data.frame(Group = rep("Directional QT", times = 2),
Proportion = c(0, 0),
n = c(0, 0),
Prop = c(0, 0),
Generation = c(6,10))
# plot3 <-
ggplot(plotdat2, aes(x=as.character(8 * Proportion), fill=Group)) +
geom_bar(aes(y=Prop),
stat = "identity",
position=position_dodge2(reverse = FALSE,preserve ="single"),
width = .7,
alpha= 0.6) +
# geom_histogram(aes(y=..density..),
#                stat="bin",
#                position=position_dodge2(reverse = FALSE,preserve ="single"),
#                alpha=1,
#                breaks = sort(c(unique(plotdat$Proportion) + 0.045,
#                                unique(plotdat$Proportion) - 0.045)),
#                center = 1) +
theme_bw() +
theme(text=element_text(family="sans",
face="plain",
color="#000000",
size=15, hjust=0.5, vjust=0.5)) +
guides(fill=guide_legend(title="Fitness Function")) +
xlab("Number of Lines") +
ylab("Proportion of Hap Blocks") +
# scale_x_continuous(breaks = sort(unique(plotdat$Proportion))) +
theme(panel.grid = element_blank()) +
scale_fill_manual("Group",values=turbo(11)[c(1,4,6,9,11)],
limits = c("alpha = - 36.5", "Directional QT",
"Multiplicative\n(alpha = 0)",
"Positive Epistasis\n(alpha = 36.5)",
"Empirical")) +
geom_point(aes(shape=as.factor(Generation),
colour=Group,
y=Prop),
stat="identity",
position="identity",
alpha=0.6,
size=4) +
geom_point(data=inv.point,
aes(shape=as.factor(Generation),
colour=Group,
y=Prop),
stat="identity",
position="identity",
alpha=0,
size=4) +
guides(shape=guide_legend(title = "Generation",
override.aes = list(alpha=1))) +
guides(color="none")
plotdat2 <- plotdat %>%
dplyr::count(Proportion, Group) %>%
complete(Group, Proportion, fill = list(n=0)) %>%
group_by(Group) %>%
mutate(Prop = n/sum(n))
plotdat2$Generation <- rep(c(6,10), times = 18)
plot3 <- ggplot(plotdat2, aes(x=as.character(8 * Proportion), fill=Group)) +
geom_bar(aes(y=Prop),
stat = "identity",
position=position_dodge2(reverse = FALSE,preserve ="single"),
width = .7) +
# geom_histogram(aes(y=..density..),
#                stat="bin",
#                position=position_dodge2(reverse = FALSE,preserve ="single"),
#                alpha=1,
#                breaks = sort(c(unique(plotdat$Proportion) + 0.045,
#                                unique(plotdat$Proportion) - 0.045)),
#                center = 1) +
theme_bw() +
theme(text=element_text(family="sans",
face="plain",
color="#000000",
size=15, hjust=0.5, vjust=0.5)) +
guides(fill=guide_legend(title="Fitness Function")) +
xlab("Number of Lines") +
ylab("Proportion of Hap Blocks") +
# scale_x_continuous(breaks = sort(unique(plotdat$Proportion))) +
theme(panel.grid = element_blank()) +
scale_fill_manual("Group",values=turbo(11)[c(1,4,6,9,11)],
limits = c("alpha = - 36.5", "Directional QT",
"Multiplicative\n(alpha = 0)",
"Positive Epistasis\n(alpha = 36.5)",
"Empirical")) +
geom_point(aes(shape=as.factor(Generation),
colour=Group,
y=Prop),
stat="identity",
position="identity",
alpha=0,
size=4) +
guides(shape=guide_legend(title = "Generation",
override.aes = list(alpha=1))) +
coord_cartesian(xlim = c(0,8), clip = 'on') +
guides(color="none")
ggplot(plotdat2, aes(x=as.character(8 * Proportion), fill=Group)) +
geom_bar(aes(y=Prop),
stat = "identity",
position=position_dodge2(reverse = FALSE,preserve ="single"),
width = .7) +
# geom_histogram(aes(y=..density..),
#                stat="bin",
#                position=position_dodge2(reverse = FALSE,preserve ="single"),
#                alpha=1,
#                breaks = sort(c(unique(plotdat$Proportion) + 0.045,
#                                unique(plotdat$Proportion) - 0.045)),
#                center = 1) +
theme_bw() +
theme(text=element_text(family="sans",
face="plain",
color="#000000",
size=15, hjust=0.5, vjust=0.5)) +
guides(fill=guide_legend(title="Fitness Function")) +
xlab("Number of Lines") +
ylab("Proportion of Hap Blocks") +
# scale_x_continuous(breaks = sort(unique(plotdat$Proportion))) +
theme(panel.grid = element_blank()) +
scale_fill_manual("Group",values=turbo(11)[c(1,4,6,9,11)],
limits = c("alpha = - 36.5", "Directional QT",
"Multiplicative\n(alpha = 0)",
"Positive Epistasis\n(alpha = 36.5)",
"Empirical")) +
geom_point(aes(shape=as.factor(Generation),
colour=Group,
y=Prop),
stat="identity",
position="identity",
alpha=0,
size=4) +
guides(shape=guide_legend(title = "Generation",
override.aes = list(alpha=1))) +
coord_cartesian(xlim = c(0,8), clip = 'on') +
guides(color="none")
ggplot(plotdat2, aes(x=as.character(8 * Proportion), fill=Group)) +
geom_bar(aes(y=Prop),
stat = "identity",
position=position_dodge2(reverse = FALSE,preserve ="single"),
width = .7) +
# geom_histogram(aes(y=..density..),
#                stat="bin",
#                position=position_dodge2(reverse = FALSE,preserve ="single"),
#                alpha=1,
#                breaks = sort(c(unique(plotdat$Proportion) + 0.045,
#                                unique(plotdat$Proportion) - 0.045)),
#                center = 1) +
theme_bw() +
theme(text=element_text(family="sans",
face="plain",
color="#000000",
size=15, hjust=0.5, vjust=0.5)) +
guides(fill=guide_legend(title="Fitness Function")) +
xlab("Number of Lines") +
ylab("Proportion of Hap Blocks") +
# scale_x_continuous(breaks = sort(unique(plotdat$Proportion))) +
theme(panel.grid = element_blank()) +
scale_fill_manual("Group",values=turbo(11)[c(1,4,6,9,11)],
limits = c("alpha = - 36.5", "Directional QT",
"Multiplicative\n(alpha = 0)",
"Positive Epistasis\n(alpha = 36.5)",
"Empirical")) +
geom_point(aes(shape=as.factor(Generation),
colour=Group,
y=Prop),
stat="identity",
position="identity",
alpha=0,
size=4) +
guides(shape=guide_legend(title = "Generation",
override.aes = list(alpha=1))) +
guides(color="none")
plotdat2$Gen <- rep(6, times = 36)
plot3 <- ggplot(plotdat2, aes(x=as.character(8 * Proportion), fill=Group)) +
geom_bar(aes(y=Prop),
stat = "identity",
position=position_dodge2(reverse = FALSE,preserve ="single"),
width = .7) +
# geom_histogram(aes(y=..density..),
#                stat="bin",
#                position=position_dodge2(reverse = FALSE,preserve ="single"),
#                alpha=1,
#                breaks = sort(c(unique(plotdat$Proportion) + 0.045,
#                                unique(plotdat$Proportion) - 0.045)),
#                center = 1) +
theme_bw() +
theme(text=element_text(family="sans",
face="plain",
color="#000000",
size=15, hjust=0.5, vjust=0.5)) +
guides(fill=guide_legend(title="Fitness Function")) +
xlab("Number of Lines") +
ylab("Proportion of Hap Blocks") +
# scale_x_continuous(breaks = sort(unique(plotdat$Proportion))) +
theme(panel.grid = element_blank()) +
scale_fill_manual("Group",values=turbo(11)[c(1,4,6,9,11)],
limits = c("alpha = - 36.5", "Directional QT",
"Multiplicative\n(alpha = 0)",
"Positive Epistasis\n(alpha = 36.5)",
"Empirical")) +
geom_point(aes(shape=as.factor(Generation),
colour=Group,
y=Prop),
stat="identity",
position="identity",
alpha=0,
size=4) +
geom_point(aes(shape=as.factor(Gen),
colour=Group,
y=Prop),
stat="identity",
position=position_dodge2(reverse = FALSE,preserve ="single"),
alpha=1,
size=4)
ggplot(plotdat2, aes(x=as.character(8 * Proportion), fill=Group)) +
geom_bar(aes(y=Prop),
stat = "identity",
position=position_dodge2(reverse = FALSE,preserve ="single"),
width = .7) +
# geom_histogram(aes(y=..density..),
#                stat="bin",
#                position=position_dodge2(reverse = FALSE,preserve ="single"),
#                alpha=1,
#                breaks = sort(c(unique(plotdat$Proportion) + 0.045,
#                                unique(plotdat$Proportion) - 0.045)),
#                center = 1) +
theme_bw() +
theme(text=element_text(family="sans",
face="plain",
color="#000000",
size=15, hjust=0.5, vjust=0.5)) +
guides(fill=guide_legend(title="Fitness Function")) +
xlab("Number of Lines") +
ylab("Proportion of Hap Blocks") +
# scale_x_continuous(breaks = sort(unique(plotdat$Proportion))) +
theme(panel.grid = element_blank()) +
scale_fill_manual("Group",values=turbo(11)[c(1,4,6,9,11)],
limits = c("alpha = - 36.5", "Directional QT",
"Multiplicative\n(alpha = 0)",
"Positive Epistasis\n(alpha = 36.5)",
"Empirical")) +
geom_point(aes(shape=as.factor(Generation),
colour=Group,
y=Prop),
stat="identity",
position="identity",
alpha=0,
size=4) +
geom_point(aes(shape=as.factor(Gen),
colour=Group,
y=Prop),
stat="identity",
position=position_dodge2(reverse = FALSE,preserve ="single"),
alpha=1,
size=4)
guides(shape=guide_legend(title = "Generation",
override.aes = list(alpha=1))) +
guides(color="none")
ggplot(plotdat2, aes(x=as.character(8 * Proportion), fill=Group)) +
geom_bar(aes(y=Prop),
stat = "identity",
position=position_dodge2(reverse = FALSE,preserve ="single"),
width = .7) +
# geom_histogram(aes(y=..density..),
#                stat="bin",
#                position=position_dodge2(reverse = FALSE,preserve ="single"),
#                alpha=1,
#                breaks = sort(c(unique(plotdat$Proportion) + 0.045,
#                                unique(plotdat$Proportion) - 0.045)),
#                center = 1) +
theme_bw() +
theme(text=element_text(family="sans",
face="plain",
color="#000000",
size=15, hjust=0.5, vjust=0.5)) +
guides(fill=guide_legend(title="Fitness Function")) +
xlab("Number of Lines") +
ylab("Proportion of Hap Blocks") +
# scale_x_continuous(breaks = sort(unique(plotdat$Proportion))) +
theme(panel.grid = element_blank()) +
scale_fill_manual("Group",values=turbo(11)[c(1,4,6,9,11)],
limits = c("alpha = - 36.5", "Directional QT",
"Multiplicative\n(alpha = 0)",
"Positive Epistasis\n(alpha = 36.5)",
"Empirical")) +
geom_point(aes(shape=as.factor(Generation),
colour=Group,
y=Prop),
stat="identity",
position="identity",
alpha=0,
size=4) +
geom_point(aes(shape=as.factor(Gen),
colour=Group,
y=Prop),
stat="identity",
position=position_dodge2(reverse = FALSE,preserve ="single"),
alpha=1,
size=4) +
guides(shape=guide_legend(title = "Generation",
override.aes = list(alpha=1))) +
guides(color="none")
ggplot(plotdat2, aes(x=as.character(8 * Proportion), fill=Group)) +
geom_bar(aes(y=Prop),
stat = "identity",
position=position_dodge2(reverse = FALSE,preserve ="single"),
width = .7) +
# geom_histogram(aes(y=..density..),
#                stat="bin",
#                position=position_dodge2(reverse = FALSE,preserve ="single"),
#                alpha=1,
#                breaks = sort(c(unique(plotdat$Proportion) + 0.045,
#                                unique(plotdat$Proportion) - 0.045)),
#                center = 1) +
theme_bw() +
theme(text=element_text(family="sans",
face="plain",
color="#000000",
size=15, hjust=0.5, vjust=0.5)) +
guides(fill=guide_legend(title="Fitness Function")) +
xlab("Number of Lines") +
ylab("Proportion of Hap Blocks") +
# scale_x_continuous(breaks = sort(unique(plotdat$Proportion))) +
theme(panel.grid = element_blank()) +
scale_fill_manual("Group",values=turbo(11)[c(1,4,6,9,11)],
limits = c("alpha = - 36.5", "Directional QT",
"Multiplicative\n(alpha = 0)",
"Positive Epistasis\n(alpha = 36.5)",
"Empirical")) +
geom_point(aes(shape=as.factor(Generation),
colour=Group,
y=Prop),
stat="identity",
position="identity",
alpha=0,
size=4) +
geom_point(aes(shape=as.factor(Gen),
fill=Group,
y=Prop),
stat="identity",
position=position_dodge2(reverse = FALSE,preserve ="single"),
alpha=1,
size=4) +
guides(shape=guide_legend(title = "Generation",
override.aes = list(alpha=1))) +
guides(color="none")
ggplot(plotdat2, aes(x=as.character(8 * Proportion), fill=Group)) +
geom_bar(aes(y=Prop),
stat = "identity",
position=position_dodge2(reverse = FALSE,preserve ="single"),
width = .7) +
# geom_histogram(aes(y=..density..),
#                stat="bin",
#                position=position_dodge2(reverse = FALSE,preserve ="single"),
#                alpha=1,
#                breaks = sort(c(unique(plotdat$Proportion) + 0.045,
#                                unique(plotdat$Proportion) - 0.045)),
#                center = 1) +
theme_bw() +
theme(text=element_text(family="sans",
face="plain",
color="#000000",
size=15, hjust=0.5, vjust=0.5)) +
guides(fill=guide_legend(title="Fitness Function")) +
xlab("Number of Lines") +
ylab("Proportion of Hap Blocks") +
# scale_x_continuous(breaks = sort(unique(plotdat$Proportion))) +
theme(panel.grid = element_blank()) +
scale_fill_manual("Group",values=turbo(11)[c(1,4,6,9,11)],
limits = c("alpha = - 36.5", "Directional QT",
"Multiplicative\n(alpha = 0)",
"Positive Epistasis\n(alpha = 36.5)",
"Empirical")) +
geom_point(aes(shape=as.factor(Generation),
colour=Group,
y=Prop),
stat="identity",
position="identity",
alpha=0,
size=4) +
geom_point(aes(shape=as.factor(Gen),
fill=Group,
y=Prop),
stat="identity",
position=position_dodge2(reverse = FALSE,preserve ="single"),
alpha=1,
size=4) +
guides(shape=guide_legend(title = "Generation",
override.aes = list(alpha=1))) +
guides(color="none")
?seq
ggplot(plotdat2, aes(x=as.character(8 * Proportion), fill=Group)) +
geom_bar(aes(y=Prop),
stat = "identity",
position=position_dodge2(reverse = FALSE,preserve ="single"),
width = .7) +
# geom_histogram(aes(y=..density..),
#                stat="bin",
#                position=position_dodge2(reverse = FALSE,preserve ="single"),
#                alpha=1,
#                breaks = sort(c(unique(plotdat$Proportion) + 0.045,
#                                unique(plotdat$Proportion) - 0.045)),
#                center = 1) +
theme_bw() +
theme(text=element_text(family="sans",
face="plain",
color="#000000",
size=15, hjust=0.5, vjust=0.5)) +
guides(fill=guide_legend(title="Fitness Function")) +
xlab("Number of Lines") +
ylab("Proportion of Hap Blocks") +
# scale_x_continuous(breaks = sort(unique(plotdat$Proportion))) +
theme(panel.grid = element_blank()) +
scale_fill_manual("Group",values=turbo(11)[c(1,4,6,9,11)],
limits = c("alpha = - 36.5", "Directional QT",
"Multiplicative\n(alpha = 0)",
"Positive Epistasis\n(alpha = 36.5)",
"Empirical")) +
scale_color_manual("Group",values=turbo(11)[c(1,4,6,9,11)],
limits = c("alpha = - 36.5", "Directional QT",
"Multiplicative\n(alpha = 0)",
"Positive Epistasis\n(alpha = 36.5)",
"Empirical")) +
geom_point(aes(shape=as.factor(Generation),
colour=Group,
y=Prop),
stat="identity",
position="identity",
alpha=0,
size=4) +
geom_point(aes(shape=as.factor(Gen),
color=Group,
y=Prop),
stat="identity",
position=position_dodge2(reverse = FALSE,preserve ="single"),
alpha=seq(from = 0, to = 1, length.out = nrow(plotdat2)),
size=4) +
guides(shape=guide_legend(title = "Generation",
override.aes = list(alpha=1))) +
guides(color="none")
head(plotdat2)
plotdat2$Gen <- rep(10, times = 36)
