totaldata <- rbind(totaldata, data)
setwd("~/Documents/GitHub/EpistasisSim/snps0.5")
empjaccs <- readRDS(file = 'hap_block_snps.jaccard.neutral999.RDS')
tmp <- c(mean(empjaccs[[1]]), mean(empjaccs[[2]]))
empjaccs <- tmp
rm(tmp)
jaccmatrix <- as.matrix(fread(file = 'sim.results.csv'))
jaccmatrix <- jaccmatrix[-1,-1]
treatment <- c(rep(c("B. Positive Epistasis",
"C. Negative Epistasis",
"A. Multiplicative",
"D. Directional QT",
"E. Truncating QT",
"F. Stabilizing QT"), each = 2000),
rep("G. Empirical", each = 2))
generation <- c(rep(c(6,10), each = 1000, times = 6),
c(6,10))
jaccards <- c()
for(i in 1:12){
jaccards <- c(jaccards, jaccmatrix[3:1002,i])
}
jaccards <- as.numeric(c(jaccards, empjaccs))
title <- rep("4977 SNPs. T0=0.5", times = length(jaccards))
data <- data.frame(treatment, generation, jaccards, title)
totaldata <- rbind(totaldata, data)
totaldata <- totaldata[-1,]
####################################
hlinedf <- totaldata[which(totaldata$treatment == "G. Empirical"),]
hlinegen10df <- hlinedf[which(hlinedf$generation == 10),]
hlinegen6df <- hlinedf[which(hlinedf$generation == 6),]
rm(hlinedf)
totaldata <- totaldata[-which(totaldata$treatment == "G. Empirical"),]
totaldata$treatment <- factor(totaldata$treatment,
levels = sort(unique(totaldata$treatment)),
labels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT" ))
ann_text1 <- data.frame(treatment = factor("Truncating QT",
levels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT" )),
jaccards = 0.62,
title = "121 Hap Blocks. T0=0.5",
lab = "Empirical Gen 6")
ann_text2 <- data.frame(treatment = factor("Truncating QT",
levels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT" )),
jaccards = 0.76,
title = "121 Hap Blocks. T0=0.5",
lab = "Empirical Gen 10")
ann_text3 <- data.frame(treatment = factor("Truncating QT",
levels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT" )),
jaccards = 0.54,
title = "4977 SNPs. T0=0.5",
lab = "Empirical Gen 6")
ann_text4 <- data.frame(treatment = factor("Truncating QT",
levels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT" )),
jaccards = 0.65,
title = "4977 SNPs. T0=0.5",
lab = "Empirical Gen 10")
totaldata <- totaldata[-which(is.na(totaldata$jaccards)),]
pointrangedata <- totaldata %>% group_by(treatment, generation, title) %>%
summarize(jaccard.mean = mean(jaccards),
jaccard.max = max(jaccards),
jaccard.min = min(jaccards))
####################################
ggplot(pointrangedata, aes(x=as.factor(treatment))) +
geom_hline(data = hlinegen10df, aes(yintercept = jaccards),
linetype="dashed",
color = turbo(11)[11],
size = .75) +
geom_hline(data = hlinegen6df, aes(yintercept = jaccards),
linetype = "dotdash",
color = turbo(11)[11],
size = .75) +
geom_pointrange(aes(y=jaccard.mean,
ymin=jaccard.min,
ymax=jaccard.max,
color=as.factor(generation)),
position=position_dodge(width = 0.3),
size = 1,
fatten = 2,
alpha = 0.6)+
facet_wrap(~ title) +
theme_bw() +
theme(text=element_text(family="sans",
face="plain", color="#000000",
size=20, hjust=0.5, vjust=0.5)) +
guides(color=guide_legend(title="Generation")) +
xlab("Fitness function") +
ylab("Jaccard Score") +
ylim(c(0,1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_manual(values = viridis(12)[c(3,7)]) +
scale_fill_manual(values = viridis(12)[c(3,7)]) +
geom_text(data = ann_text1,
aes(y=jaccards),
label = "Empirical Gen 6",
color=turbo(11)[11],
size=4 , fontface="bold") +
geom_text(data = ann_text2,
aes(y=jaccards),
label = "Empirical Gen 10",
color=turbo(11)[11],
size=4 , fontface="bold") +
geom_text(data = ann_text3,
aes(y=jaccards),
label = "Empirical Gen 6",
color=turbo(11)[11],
size=4 , fontface="bold") +
geom_text(data = ann_text4,
aes(y=jaccards),
label = "Empirical Gen 10",
color=turbo(11)[11],
size=4 , fontface="bold") +
theme(panel.grid.minor  = element_blank())
###################################
library(data.table)
library(ggraptR)
library(gridExtra)
library(viridis)
library(matrixStats)
library(tidyr)
library(patchwork)
#####
setwd("~/Documents/GitHub/EpistasisSim/EmpT0hb")
empjaccs <- readRDS(file = 'hap_blocks.jaccard.neutral999.RDS')
tmp <- c(mean(empjaccs[[1]]), mean(empjaccs[[2]]))
empjaccs <- tmp
rm(tmp)
jaccmatrix <- as.matrix(fread(file = 'sim.results.csv'))
jaccmatrix <- jaccmatrix[-1,-1]
treatment <- c(rep(c("B. Positive Epistasis",
"C. Negative Epistasis",
"A. Multiplicative",
"D. Directional QT",
"E. Truncating QT",
"F. Stabilizing QT"), each = 2000),
rep("G. Empirical", each = 2))
generation <- c(rep(c(6,10), each = 1000, times = 6),
c(6,10))
jaccards <- c()
for(i in 1:12){
jaccards <- c(jaccards, jaccmatrix[3:1002,i])
}
jaccards <- as.numeric(c(jaccards, empjaccs))
title <- rep("Freely Recombining", times = length(jaccards))
totaldata <- data.frame(treatment, generation, jaccards, title)
setwd("~/Documents/GitHub/EpistasisSim/EmpT0hbLinkage/2xRed")
jaccmatrix <- as.matrix(fread(file = 'sim.results.csv'))
jaccmatrix <- jaccmatrix[-1,-1]
treatment <- c(rep(c("B. Positive Epistasis",
"C. Negative Epistasis",
"A. Multiplicative",
"D. Directional QT",
"E. Truncating QT",
"F. Stabilizing QT"), each = 2000))
generation <- c(rep(c(6,10), each = 1000, times = 6))
jaccards <- c()
for(i in 1:12){
jaccards <- c(jaccards, jaccmatrix[3:1002,i])
}
jaccards <- as.numeric(jaccards)
title <- rep("Linked 2x Reduced RR", times = length(jaccards))
totaldata <- rbind(totaldata, data.frame(treatment, generation, jaccards, title))
setwd("~/Documents/GitHub/EpistasisSim/EmpT0hbLinkage")
empjaccs <- readRDS(file = 'hap_blocks.jaccard.neutral999.RDS')
tmp <- c(mean(empjaccs[[1]]), mean(empjaccs[[2]]))
empjaccs <- tmp
rm(tmp)
jaccmatrix <- as.matrix(fread(file = 'sim.results.csv'))
jaccmatrix <- jaccmatrix[-1,-1]
treatment <- c(rep(c("B. Positive Epistasis",
"C. Negative Epistasis",
"A. Multiplicative",
"D. Directional QT",
"E. Truncating QT",
"F. Stabilizing QT"), each = 2000),
rep("G. Empirical", each = 2))
generation <- c(rep(c(6,10), each = 1000, times = 6),
c(6,10))
jaccards <- c()
for(i in 1:12){
jaccards <- c(jaccards, jaccmatrix[3:1002,i])
}
jaccards <- as.numeric(c(jaccards, empjaccs))
title <- rep("Linked", times = length(jaccards))
totaldata <- rbind(totaldata, data.frame(treatment, generation, jaccards, title))
totaldata <- totaldata[-which(totaldata$treatment == "G. Empirical"),]
totaldata$treatment <- factor(totaldata$treatment,
levels = sort(unique(totaldata$treatment)),
labels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT" ))
#########################
ggplot(totaldata, aes(y=jaccards, x=as.factor(treatment))) +
geom_hline(yintercept=empjaccs[1],
linetype="dotdash",
color = turbo(11)[11],
size = .75) +
geom_hline(yintercept=empjaccs[2],
linetype="dashed",
color = turbo(11)[11],
size  = .75) +
geom_boxplot(aes(fill=as.factor(generation)),
stat="boxplot", position="dodge",
alpha=1, width=0.3) +
facet_wrap(~ title) +
theme_bw() +
theme(text=element_text(family="sans", face="plain",
color="#000000", size=15, hjust=0.5, vjust=0.5)) +
guides(fill=guide_legend(title="Generation")) +
xlab("Fitness Function") +
ylab("Mean Jaccard Score") +
scale_y_continuous(sec.axis = sec_axis(~ ., breaks = empjaccs,
labels = c("Empirical\nGen 6",
"Empirical\nGen 10")),
limits = c(0,1)) +
theme(axis.text.x = element_text(angle = 45,
vjust = 1,
hjust=1)) +
scale_color_manual(values = viridis(12)[c(3,12)]) +
scale_fill_manual(values = viridis(12)[c(3,12)]) +
theme(axis.text.y.right = element_text(size = 12,
face = "bold",
color = turbo(11)[11])) +
theme(panel.grid.minor = element_blank())
linkagedata <- totaldata
save(linkagedata, file = "linkageData.RData")
######
totaldata <- array()
setwd("~/Documents/GitHub/EpistasisSim/EmpT0hb")
empjaccs <- readRDS(file = 'hap_blocks.jaccard.neutral999.RDS')
tmp <- c(mean(empjaccs[[1]]), mean(empjaccs[[2]]))
empjaccs <- tmp
rm(tmp)
jaccmatrix <- as.matrix(fread(file = 'sim.results.csv'))
jaccmatrix <- jaccmatrix[-1,-1]
treatment <- c(rep(c("B. Positive Epistasis",
"C. Negative Epistasis",
"A. Multiplicative",
"D. Directional QT",
"E. Truncating QT",
"F. Stabilizing QT"), each = 2000),
rep("G. Empirical", each = 2))
generation <- c(rep(c(6,10), each = 1000, times = 6),
c(6,10))
jaccards <- c()
for(i in 1:12){
jaccards <- c(jaccards, jaccmatrix[3:1002,i])
}
jaccards <- as.numeric(c(jaccards, empjaccs))
title <- rep("121 Hap Blocks. Empirical T0", times = length(jaccards))
data <- data.frame(treatment, generation, jaccards, title)
totaldata <- rbind(totaldata, data)
setwd("~/Documents/GitHub/EpistasisSim/MutDrifthb")
empjaccs <- readRDS(file = 'hap_blocks.jaccard.neutral999.RDS')
tmp <- c(mean(empjaccs[[1]]), mean(empjaccs[[2]]))
empjaccs <- tmp
rm(tmp)
jaccmatrix <- as.matrix(fread(file = 'sim.results.csv'))
jaccmatrix <- jaccmatrix[-1,-1]
treatment <- c(rep(c("B. Positive Epistasis",
"C. Negative Epistasis",
"A. Multiplicative",
"D. Directional QT",
"E. Truncating QT",
"F. Stabilizing QT"), each = 2000),
rep("G. Empirical", each = 2))
generation <- c(rep(c(6,10), each = 1000, times = 6),
c(6,10))
jaccards <- c()
for(i in 1:12){
jaccards <- c(jaccards, jaccmatrix[3:1002,i])
}
jaccards <- as.numeric(c(jaccards, empjaccs))
title <- rep("121 Hap Blocks. Neutral T0", times = length(jaccards))
data <- data.frame(treatment, generation, jaccards, title)
totaldata <- rbind(totaldata,data)
setwd("~/Documents/GitHub/EpistasisSim/hb0.5")
empjaccs <- readRDS(file = 'hap_blocks.jaccard.neutral999.RDS')
tmp <- c(mean(empjaccs[[1]]), mean(empjaccs[[2]]))
empjaccs <- tmp
rm(tmp)
jaccmatrix <- as.matrix(fread(file = 'sim.results.csv'))
jaccmatrix <- jaccmatrix[-1,-1]
treatment <- c(rep(c("B. Positive Epistasis",
"C. Negative Epistasis",
"A. Multiplicative",
"D. Directional QT",
"E. Truncating QT",
"F. Stabilizing QT"), each = 2000),
rep("G. Empirical", each = 2))
generation <- c(rep(c(6,10), each = 1000, times = 6),
c(6,10))
jaccards <- c()
for(i in 1:12){
jaccards <- c(jaccards, jaccmatrix[3:1002,i])
}
jaccards <- as.numeric(c(jaccards, empjaccs))
title <- rep("121 Hap Blocks. T0=0.5", times = length(jaccards))
data <- data.frame(treatment, generation, jaccards, title)
totaldata <- rbind(totaldata,data)
setwd("~/Documents/GitHub/EpistasisSim/EmpT0snps")
empjaccs <- readRDS(file = 'hap_block_snps.jaccard.neutral999.RDS')
tmp <- c(mean(empjaccs[[1]]), mean(empjaccs[[2]]))
empjaccs <- tmp
rm(tmp)
jaccmatrix <- as.matrix(fread(file = '../results/EmpT0/sim.results.csv'))
jaccmatrix <- jaccmatrix[-1,-1]
treatment <- c(rep(c("B. Positive Epistasis",
"C. Negative Epistasis",
"A. Multiplicative",
"D. Directional QT",
"E. Truncating QT",
"F. Stabilizing QT"), each = 2000),
rep("G. Empirical", each = 2))
generation <- c(rep(c(6,10), each = 1000, times = 6),
c(6,10))
jaccards <- c()
for(i in 1:12){
jaccards <- c(jaccards, jaccmatrix[3:1002,i])
}
jaccards <- as.numeric(c(jaccards, empjaccs))
title <- rep("4977 SNPs. Empirical T0", times = length(jaccards))
data <- data.frame(treatment, generation, jaccards, title)
totaldata <- rbind(totaldata, data)
setwd("~/Documents/GitHub/EpistasisSim/MutDriftsnps")
empjaccs <- readRDS(file = 'hap_block_snps.jaccard.neutral999.RDS')
tmp <- c(mean(empjaccs[[1]]), mean(empjaccs[[2]]))
empjaccs <- tmp
rm(tmp)
jaccmatrix <- as.matrix(fread(file = 'sim.results.csv'))
jaccmatrix <- jaccmatrix[-1,-1]
treatment <- c(rep(c("B. Positive Epistasis",
"C. Negative Epistasis",
"A. Multiplicative",
"D. Directional QT",
"E. Truncating QT",
"F. Stabilizing QT"), each = 2000),
rep("G. Empirical", each = 2))
generation <- c(rep(c(6,10), each = 1000, times = 6),
c(6,10))
jaccards <- c()
for(i in 1:12){
jaccards <- c(jaccards, jaccmatrix[3:1002,i])
}
jaccards <- as.numeric(c(jaccards, empjaccs))
title <- rep("4977 SNPs. Neutral T0", times = length(jaccards))
data <- data.frame(treatment, generation, jaccards, title)
totaldata <- rbind(totaldata, data)
setwd("~/Documents/GitHub/EpistasisSim/snps0.5")
empjaccs <- readRDS(file = 'hap_block_snps.jaccard.neutral999.RDS')
tmp <- c(mean(empjaccs[[1]]), mean(empjaccs[[2]]))
empjaccs <- tmp
rm(tmp)
jaccmatrix <- as.matrix(fread(file = 'sim.results.csv'))
jaccmatrix <- jaccmatrix[-1,-1]
treatment <- c(rep(c("B. Positive Epistasis",
"C. Negative Epistasis",
"A. Multiplicative",
"D. Directional QT",
"E. Truncating QT",
"F. Stabilizing QT"), each = 2000),
rep("G. Empirical", each = 2))
generation <- c(rep(c(6,10), each = 1000, times = 6),
c(6,10))
jaccards <- c()
for(i in 1:12){
jaccards <- c(jaccards, jaccmatrix[3:1002,i])
}
jaccards <- as.numeric(c(jaccards, empjaccs))
title <- rep("4977 SNPs. T0=0.5", times = length(jaccards))
data <- data.frame(treatment, generation, jaccards, title)
totaldata <- rbind(totaldata, data)
totaldata <- totaldata[-1,]
####################################
hlinedf <- totaldata[which(totaldata$treatment == "G. Empirical"),]
hlinegen10df <- hlinedf[which(hlinedf$generation == 10),]
hlinegen6df <- hlinedf[which(hlinedf$generation == 6),]
rm(hlinedf)
totaldata <- totaldata[-which(totaldata$treatment == "G. Empirical"),]
totaldata$treatment <- factor(totaldata$treatment,
levels = sort(unique(totaldata$treatment)),
labels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT" ))
ann_text1 <- data.frame(treatment = factor("Truncating QT",
levels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT" )),
jaccards = 0.62,
title = "121 Hap Blocks. T0=0.5",
lab = "Empirical Gen 6")
ann_text2 <- data.frame(treatment = factor("Truncating QT",
levels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT" )),
jaccards = 0.76,
title = "121 Hap Blocks. T0=0.5",
lab = "Empirical Gen 10")
ann_text3 <- data.frame(treatment = factor("Truncating QT",
levels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT" )),
jaccards = 0.54,
title = "4977 SNPs. T0=0.5",
lab = "Empirical Gen 6")
ann_text4 <- data.frame(treatment = factor("Truncating QT",
levels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT" )),
jaccards = 0.65,
title = "4977 SNPs. T0=0.5",
lab = "Empirical Gen 10")
totaldata <- totaldata[-which(is.na(totaldata$jaccards)),]
pointrangedata <- totaldata %>% group_by(treatment, generation, title) %>%
summarize(jaccard.mean = mean(jaccards),
jaccard.max = max(jaccards),
jaccard.min = min(jaccards))
####################################
ggplot(pointrangedata, aes(x=as.factor(treatment))) +
geom_hline(data = hlinegen10df, aes(yintercept = jaccards),
linetype="dashed",
color = turbo(11)[11],
size = .75) +
geom_hline(data = hlinegen6df, aes(yintercept = jaccards),
linetype = "dotdash",
color = turbo(11)[11],
size = .75) +
geom_pointrange(aes(y=jaccard.mean,
ymin=jaccard.min,
ymax=jaccard.max,
color=as.factor(generation)),
position=position_dodge(width = 0.3),
size = 1,
fatten = 2,
alpha = 0.6)+
facet_wrap(~ title) +
theme_bw() +
theme(text=element_text(family="sans",
face="plain", color="#000000",
size=20, hjust=0.5, vjust=0.5)) +
guides(color=guide_legend(title="Generation")) +
xlab("Fitness function") +
ylab("Jaccard Score") +
ylim(c(0,1)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +
scale_color_manual(values = viridis(12)[c(3,7)]) +
scale_fill_manual(values = viridis(12)[c(3,7)]) +
geom_text(data = ann_text1,
aes(y=jaccards),
label = "Empirical Gen 6",
color=turbo(11)[11],
size=4 , fontface="bold") +
geom_text(data = ann_text2,
aes(y=jaccards),
label = "Empirical Gen 10",
color=turbo(11)[11],
size=4 , fontface="bold") +
geom_text(data = ann_text3,
aes(y=jaccards),
label = "Empirical Gen 6",
color=turbo(11)[11],
size=4 , fontface="bold") +
geom_text(data = ann_text4,
aes(y=jaccards),
label = "Empirical Gen 10",
color=turbo(11)[11],
size=4 , fontface="bold") +
theme(panel.grid.minor  = element_blank())
###################################
startingFreqData <- totaldata
save(startingFreqData, file = "startingFreqData.RData")
