str(x)
y <- readRDS(file = "haplotype_blocks.snp_res.RDS")
length(unique(x$chr))
x$T0
x$T0 == x$T0_AF
sum(x$T0 == x$T0_AF)
sum(x$T0, x$T0_AF)
sum(x$T0, x$T0_AF)
x$T0 == x$T0_AF
sum(x$T0[x$T0 == x$T0_AF]
)
sum(x$T0 + x$T0_AF == 1)
sum(x$T0 == x$T0_AF)
1961 + 3011
sum(x$T0 + x$T0_AF == 1 | x$T0 == x$T0_AF)
which( x$T0 + x$T0_AF != 1 | x$T0 != x$T0_AF)
str(x)
x[[15]]
x[[1]]
str(x)
rm(list = ls())
x <- fread(file = "haplotype_blocks.snps_res.csv")
setwd("~/Documents/GitHub/EpistasisSim")
setwd("~/Documents/GitHub/EpistasisSim")
x <- fread(file = "haplotype_blocks.snps_res.csv")
x <- fread(file = "haplotype_blocks.snp_res.csv")
x$T0
x$T0 == x$T0_AF
x$T0[x$T0 != x$T0_AF] + x$T0_AF[x$T0 != x$T0_AF]
sum(x$T0[x$T0 != x$T0_AF] + x$T0_AF[x$T0 != x$T0_AF] == 1)
sum([x$T0 != x$T0_AF])
sum(x$T0 != x$T0_AF)
which(x$T0 != x$T0_AF)
sum(x$T0[x$T0 != x$T0_AF] + x$T0_AF[x$T0 != x$T0_AF] == 1)
which(x$T0[x$T0 != x$T0_AF] + x$T0_AF[x$T0 != x$T0_AF] != 1)
x$T0[which(x$T0[x$T0 != x$T0_AF] + x$T0_AF[x$T0 != x$T0_AF] != 1)]  + x$T0_AF[which(x$T0[x$T0 != x$T0_AF] + x$T0_AF[x$T0 != x$T0_AF] != 1)]
pos <- x$pos[x$haplotype_block == i]
library(data.table)
setwd("~/Documents/GitHub/EpistasisSim")
x <- fread(file = "haplotype_blocks.snp_res.csv")
RecomFractions <- c()
i = unique(x$haplotype_block)[1]
pos <- x$pos[x$haplotype_block == i]
RF.bp <- 0.01 / 1e6
RF.bp <- 0.016 / 1e6
RecomFractions <- c()
RF <- RF.bp * diff(pos)
library(data.table)
setwd("~/Documents/GitHub/EpistasisSim")
x <- fread(file = "haplotype_blocks.snp_res.csv")
RF.bp <- 0.016 / 1e6
RecomFractions <- c()
for(i in unique(x$haplotype_block)){
pos <- x$pos[x$haplotype_block == i]
RF <- RF.bp * diff(pos)
RecomFractions <- c(RecomFractions, RF, 0.5)
}
write.csv(RecomFractions, file = 'RecomMap.csv')
diff(pos)
summary(RecomFractions)
RecomFractions <- c()
for(i in unique(x$haplotype_block)){
pos <- x$pos[x$haplotype_block == i]
if(min(diff(pos)) < 0) stop()
RF <- RF.bp * diff(pos)
RecomFractions <- c(RecomFractions, RF, 0.5)
}
summary(diff(pos))
diff(pos)
pos
class(s)
class(x)
?order
library(data.table)
setwd("~/Documents/GitHub/EpistasisSim")
x <- fread(file = "haplotype_blocks.snp_res.csv")
sorteddata <- data.frame()
haps =unique(x$haplotype_block)
haps =unique(x$haplotype_block)[1]
hapdata <- x[x$haplotype_block == haps]
?order
sorteddata <- rbind(sorteddata, order(hapdata, hapdata$pos))
order(hapdata$pos)
hapdata[order(hapdata$pos),]
library(data.table)
setwd("~/Documents/GitHub/EpistasisSim")
x <- fread(file = "haplotype_blocks.snp_res.csv")
sorteddata <- data.frame()
for(haps in unique(x$haplotype_block)){
hapdata <- x[x$haplotype_block == haps]
sorteddata <- rbind(sorteddata,hapdata[order(hapdata$pos),])
}
RF.bp <- 0.016 / 1e6
rm(list = ls())
library(data.table)
setwd("~/Documents/GitHub/EpistasisSim")
x <- fread(file = "haplotype_blocks.snp_res.csv")
sorteddata <- data.frame()
for(haps in unique(x$haplotype_block)){
hapdata <- x[x$haplotype_block == haps]
sorteddata <- rbind(sorteddata,hapdata[order(hapdata$pos),])
}
RF.bp <- 0.016 / 1e6
RecomFractions <- c()
for(i in unique(sorteddata$haplotype_block)){
pos <- x$pos[sorteddata$haplotype_block == i]
if(min(diff(pos)) < 0) stop()
RF <- RF.bp * diff(pos)
RecomFractions <- c(RecomFractions, RF, 0.5)
}
diff(pos)
sorteddata$haplotype_block == i
pos <- x$pos[sorteddata$haplotype_block == i]
if(min(diff(pos)) < 0) stop()
pos <- sorteddata$pos[sorteddata$haplotype_block == i]
if(min(diff(pos)) < 0) stop()
RF <- RF.bp * diff(pos)
RecomFractions <- c(RecomFractions, RF, 0.5)
for(i in unique(sorteddata$haplotype_block)){
pos <- sorteddata$pos[sorteddata$haplotype_block == i]
if(min(diff(pos)) < 0) stop()
RF <- RF.bp * diff(pos)
RecomFractions <- c(RecomFractions, RF, 0.5)
}
library(data.table)
setwd("~/Documents/GitHub/EpistasisSim")
x <- fread(file = "haplotype_blocks.snp_res.csv")
sorteddata <- data.frame()
for(haps in unique(x$haplotype_block)){
hapdata <- x[x$haplotype_block == haps]
sorteddata <- rbind(sorteddata,hapdata[order(hapdata$pos),])
}
RF.bp <- 0.016 / 1e6
RecomFractions <- c()
for(i in unique(sorteddata$haplotype_block)){
pos <- sorteddata$pos[sorteddata$haplotype_block == i]
if(min(diff(pos)) < 0) stop()
RF <- RF.bp * diff(pos)
RecomFractions <- c(RecomFractions, RF, 0.5)
}
write.csv(sorteddata, file = 'sortedsnpdata.csv')
write.csv(RecomFractions, file = 'RecomMap.csv')
tail(RecomFractions)
RecomFractions <- RecomFractions[-length(RecomFractions)]
write.csv(RecomFractions, file = 'RecomMap.csv')
sorteddata$T0 == 0
sum(sorteddata$T0 == 0)
sum(sorteddata$T0_AF == 0)
summary(x$selCoef)
plot(density(x$selCoef))
########################
## Internal Functions ##
########################
GetJaccards <- function(rawout, cutoff, results){
for(gen in 1:2){
signsnps <- vector("list",10)
names(signsnps) <- paste('pop', 1:10)
for(pop in 1:10){
popdat <- rawout[which(rawout[,2] == pop),]
if(gen == 1){
signsnps[[pop]] <- which((popdat[2,3:ncol(popdat)] - popdat[1,3:ncol(popdat)]) >= cutoff)
}else if(gen == 2){
signsnps[[pop]] <- which((popdat[3,3:ncol(popdat)] - popdat[1,3:ncol(popdat)]) >= cutoff)
}
}
jaccmat <- array(dim = c(10,10))
for(j in 1:9){
for(k in (j+1):10){
jaccmat[j,k] <- length(intersect(signsnps[[j]], signsnps[[k]])) / length(union(signsnps[[j]], signsnps[[k]]))
if(length(union(signsnps[[j]], signsnps[[k]])) == 0) jaccmat[j,k] <- 0
cat("Intersect: ", length(intersect(signsnps[[j]], signsnps[[k]])))
cat("    Union: ", length(union(signsnps[[j]], signsnps[[k]])), "\n")
}
}
jaccmat <- na.omit(as.vector(jaccmat))
# results[(5 * i + 1):(5 *  i + 5)] <- quantile(jaccmat)
results[[gen]] <- c(results[[gen]], mean(jaccmat))
}
return(results)
}
################
## Parameters ##
################
library(ggraptR)
setwd("~/Documents/GitHub/EpistasisSim")
haplotypedata <- readRDS(file = 'hap_blocks.RDS')
hap_blocks.jaccard.sim10.RDS <- readRDS(file = 'hap_blocks.jaccard.sim10.gen10_cutoff.RDS')
iter <- 1
seeds <- sample(1:2^15, 5 * iter)
npops = 10
nloci = 4977
RR = 0.5
popsize = 10
fmin = 0
fmax = 1
ahat <- 8
bhat <- 0
scaleT0 <- 0
scales <- 0
########################
## Positive Epistasis ##
########################
ExpJaccards <- list("Gen6" = c(),
"Gen10" = c())
for(i in 1:iter){
system(paste("slim -d seed=", seeds[i],
" -d npops=", npops,
" -d nloci=", nloci,
" -d RR=",RR,
" -d popsize=", popsize,
" -d " ,'"', 'fitnessFunction=', "'", 'exponential', "'", '"',
" -d fmin=", fmin,
" -d fmax=", fmax,
" -d a=", ahat,
" -d scaleT0=", scaleT0,
" -d scales=", scales,
" New.slim | tail -n +14 > output/exponential",
"_seed=", seeds[i],
"_a=", ahat,
"_b=", bhat, ".csv", sep = ""))
rawout <- as.matrix(read.csv(file = paste('./output/exponential',
"_seed=", seeds[i],
"_a=", ahat,
"_b=", bhat, ".csv", sep = "")))
rawout <- rawout[,-ncol(rawout)]
ExpJaccards <- GetJaccards(rawout = rawout,
cutoff = haplotypedata$Gen10_AFC10,
results = ExpJaccards)
system(paste("rm ./output/exponential",
"_seed=", seeds[i],
"_a=", ahat,
"_b=", bhat, ".csv", sep = ''))
}
########################
## Negative Epistasis ##
########################
ahat <- -ahat
NegJaccards <- list("Gen6" = c(),
"Gen10" = c())
for(i in 1:iter){
system(paste("slim -d seed=", seeds[i],
" -d npops=", npops,
" -d nloci=", nloci,
" -d RR=",RR,
" -d popsize=", popsize,
" -d " ,'"', 'fitnessFunction=', "'", 'exponential', "'", '"',
" -d fmin=", fmin,
" -d fmax=", fmax,
" -d a=", ahat,
" -d b=", bhat,
" -d scaleT0=", scaleT0,
" -d scales=", scales,
" New.slim | tail -n +14 > output/exponential",
"_seed=", seeds[i],
"_a=", ahat,
"_b=", bhat, ".csv", sep = ""))
rawout <- as.matrix(read.csv(file = paste('./output/exponential',
"_seed=", seeds[i],
"_a=", ahat,
"_b=", bhat, ".csv", sep = "")))
rawout <- rawout[,-ncol(rawout)]
NegJaccards <- GetJaccards(rawout = rawout,
cutoff = haplotypedata$Gen10_AFC10,
results = NegJaccards)
system(paste("rm ./output/exponential",
"_seed=", seeds[i],
"_a=", ahat,
"_b=", bhat, ".csv", sep = ''))
}
#############################
## Multiplicative Fitness  ##
#############################
SSJaccards <- list("Gen6" = c(),
"Gen10" = c())
for(i in 1:iter){
system(paste("slim -d seed=", seeds[3 * iter + i],
" -d npops=", npops,
" -d nloci=", nloci,
" -d RR=",RR,
" -d popsize=", popsize,
" -d scaleT0=", scaleT0,
" -d scales=", scales,
" sim.slim | tail -n +14 > output/polygenic.csv", sep = ""))
rawout <- as.matrix(read.csv(file = paste('./output/polygenic.csv', sep = "")))
rawout <- rawout[,-ncol(rawout)]
SSJaccards <- GetJaccards(rawout = rawout,
cutoff = haplotypedata$Gen10_AFC10,
results = SSJaccards)
system("rm ./output/polygenic.csv")
}
###########################
## Directional Epistasis ##
###########################
# load("~/Documents/GitHub/EpistasisSim/DirectionalEpistasis.RData")
#
# shat <- sum(ABC_SLiM$weights * ABC_SLiM$param[,1])
# rhat <- sum(ABC_SLiM$weights * ABC_SLiM$param[,2])
# bhat <- sum(ABC_SLiM$weights * ABC_SLiM$param[,3]) * 100
shat <- 0.1
rhat <- -15
bhat <- -0.3
DirectionalJaccards <- list("Gen6" = c(),
"Gen10" = c())
for(i in 1:iter){
system(paste("slim -d seed=", seeds[i],
" -d npops=", npops,
" -d nloci=", nloci,
" -d RR=",RR,
" -d popsize=", popsize,
" -d " ,'"', 'fitnessFunction=', "'", 'directional', "'", '"',
" -d fmin=", fmin,
" -d fmax=", fmax,
" -d s=", shat,
" -d r=", rhat,
" -d b=", bhat,
" -d scaleT0=", scaleT0,
" -d scales=", scales,
" New.slim | tail -n +14 > output/directional",
"_seed=", seeds[i],
"_s=", shat,
"_r=", rhat,
"_b=", bhat, ".csv", sep = ""))
rawout <- as.matrix(read.csv(file = paste('./output/directional',
"_seed=", seeds[i],
"_s=", shat,
"_r=", rhat,
"_b=", bhat, ".csv", sep = "")))
rawout <- rawout[,-ncol(rawout)]
DirectionalJaccards <- GetJaccards(rawout = rawout,
cutoff = haplotypedata$Gen10_AFC10,
results = DirectionalJaccards)
system(paste("rm ./output/directional",
"_seed=", seeds[i],
"_s=", shat,
"_r=", rhat,
"_b=", bhat, ".csv", sep = ''))
}
###################################
## Diminishing Returns Epistasis ##
###################################
ahat <- 10
bhat <- -0.25
DimRetJaccards <- list("Gen6" = c(),
"Gen10" = c())
for(i in 1:iter){
system(paste("slim -d seed=", seeds[2 * iter + i],
" -d npops=", npops,
" -d nloci=", nloci,
" -d RR=",RR,
" -d popsize=", popsize,
" -d " ,'"', 'fitnessFunction=', "'", 'diminishingReturns', "'", '"',
" -d fmin=", fmin,
" -d fmax=", fmax,
" -d b=", bhat,
" -d a=", ahat,
" -d scaleT0=", scaleT0,
" -d scales=", scales,
" New.slim | tail -n +14 > output/diminishingReturns",
"_seed=", seeds[2 * iter + i],
"_a=", ahat,
"_b=", bhat, ".csv", sep = ""))
rawout <- as.matrix(read.csv(file = paste('./output/diminishingReturns',
"_seed=", seeds[2 * iter + i],
"_a=", ahat,
"_b=", bhat, ".csv", sep = "")))
rawout <- rawout[,-ncol(rawout)]
DimRetJaccards <- GetJaccards(rawout = rawout,
cutoff = haplotypedata$Gen10_AFC10,
results = DimRetJaccards)
system(paste("rm ./output/diminishingReturns",
"_seed=", seeds[2 * iter + i],
"_a=", ahat,
"_b=", bhat, ".csv", sep = ''))
}
###########################
## Stabilizing Epistasis ##
###########################
mu <- 0.4
std <- 0.07
StabJaccards <- list("Gen6" = c(),
"Gen10" = c())
for(i in 1:iter){
system(paste("slim -d seed=", seeds[2 * iter + i],
" -d npops=", npops,
" -d nloci=", nloci,
" -d RR=",RR,
" -d popsize=", popsize,
" -d " ,'"', 'fitnessFunction=', "'", 'stabilizing', "'", '"',
" -d mu=", mu,
" -d std=", std,
" -d scaleT0=", scaleT0,
" -d scales=", scales,
" New.slim | tail -n +14 > output/stabilizing",
"_seed=", seeds[2 * iter + i],
"_mu=", mu,
"_std=", std, ".csv", sep = ""))
rawout <- as.matrix(read.csv(file = paste('./output/stabilizing',
"_seed=", seeds[2 * iter + i],
"_mu=", mu,
"_std=", std, ".csv", sep = "")))
rawout <- rawout[,-ncol(rawout)]
StabJaccards <- GetJaccards(rawout = rawout,
cutoff = haplotypedata$Gen10_AFC10,
results = StabJaccards)
system(paste("rm ./output/stabilizing",
"_seed=", seeds[2 * iter + i],
"_mu=", mu,
"_std=", std, ".csv", sep = ''))
}
################################################
if(scales == 1 | scaleT0 == 1){
DimRetJaccards$Gen6 <- rep(0.0, times = 45)
DimRetJaccards$Gen10 <- rep(0.0, times = 45)
}
treatment <- c(rep("G. Empirical", times = 73),
rep("A. Multitplicative", times = 90),
rep("B. Positive Epistasis", times = 90),
rep("C. Negative Epistasis", times = 90),
rep("D. Directional Epistasis", times = 90),
rep("E. Truncating Epistasis", times = 90),
rep("F. Stabilizing Epistasis", times = 90))
generation <- c(rep(6, each = 45), rep(10, times = 28),
rep(c(6,10), times = 6, each = 45))
Jaccards <- c(hap_blocks.jaccard.sim10.RDS[[1]],
hap_blocks.jaccard.sim10.RDS[[2]],
SSJaccards$Gen6,
SSJaccards$Gen10,
ExpJaccards$Gen6,
ExpJaccards$Gen10,
NegJaccards$Gen6,
NegJaccards$Gen10,
DirectionalJaccards$Gen6,
DirectionalJaccards$Gen10,
DimRetJaccards$Gen6,
DimRetJaccards$Gen10,
StabJaccards$Gen6,
StabJaccards$Gen10)
data <- data.frame(treatment, generation, Jaccards)
# png(filename = "EmpericalBoth.png", width = 1800, height = 1000)
ggplot(data, aes(y=Jaccards, x=as.factor(treatment))) +
geom_boxplot(aes(fill=as.factor(generation)), stat="boxplot", position="dodge", alpha=0.5, width=0.2) +
theme_grey() +
theme(text=element_text(family="sans", face="plain", color="#000000", size=12, hjust=0.5, vjust=0.5)) +
guides(fill=guide_legend(title="generation")) +
ggtitle("Pairwise Similarity in Allele Frequency Shifts") +
xlab("Fitness Function") +
ylab("Jaccard Score") +
ylim(0,1)+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
# dev.off()
# ggraptR(data)
rm(list = ls)
rm(list = ls())
x <- fread(file = "haplotype_blocks.snp_res.csv")
sorted <- fread(file = "sortedsnpdata.csv")
y <- readRDS(file = "hap_blocks.res.RDS")
y <- readRDS(file = "lab.snp_res_dt.RDS")
################
## Parameters ##
################
library(ggraptR)
setwd("~/Documents/GitHub/EpistasisSim")
haplotypedata <- fread(file = "sortedsnpdata.csv")
hap_blocks.jaccard.sim10.RDS <- readRDS(file = 'hap_blocks_snps.jaccard.sim10.RDS')
hap_blocks.jaccard.sim10.RDS <- readRDS(file = 'hap_block_snps.jaccard.sim10.RDS')
iter <- 1
seeds <- sample(1:2^15, 5 * iter)
npops = 10
nloci = 4977
RR = 0.5
popsize = 1750
popsize = 100
fmin = 0
fmax = 1
ahat <- 8
bhat <- 0
scaleT0 <- 0
scales <- 0
########################
## Positive Epistasis ##
########################
ExpJaccards <- list("Gen6" = c(),
"Gen10" = c())
for(i in 1:iter){
system(paste("slim -d seed=", seeds[i],
" -d npops=", npops,
" -d nloci=", nloci,
" -d RR=",RR,
" -d popsize=", popsize,
" -d " ,'"', 'fitnessFunction=', "'", 'exponential', "'", '"',
" -d fmin=", fmin,
" -d fmax=", fmax,
" -d a=", ahat,
" -d scaleT0=", scaleT0,
" -d scales=", scales,
" New.slim | tail -n +14 > output/exponential",
"_seed=", seeds[i],
"_a=", ahat,
"_b=", bhat, ".csv", sep = ""))
rawout <- as.matrix(read.csv(file = paste('./output/exponential',
"_seed=", seeds[i],
"_a=", ahat,
"_b=", bhat, ".csv", sep = "")))
rawout <- rawout[,-ncol(rawout)]
ExpJaccards <- GetJaccards(rawout = rawout,
cutoff = haplotypedata$Gen10_AFC10,
results = ExpJaccards)
system(paste("rm ./output/exponential",
"_seed=", seeds[i],
"_a=", ahat,
"_b=", bhat, ".csv", sep = ''))
}
