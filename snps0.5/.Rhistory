"Truncating QT",
"Stabilizing QT"), each = 200))
linesdat <- rbind(linesdat, linesdatadd)
plot(x = x, y = log10(DirectionalEpistasis), type = "l", col = turbo(11)[4],
xlab = "Phenotype", ylab = "log(Relative Fitness)", lwd = 2,
ylim = c(-10,0), cex.lab = 1.25, cex.axis = 1.5)
lines(x = x, y = log10(TruncatingEpistasis), col = turbo(11)[5], lwd = 2)
lines(x = x, y = log10(StabilizingEpistasis), col = turbo(11)[10], lwd = 2)
title("121 Haplotype Blocks. Quantative Fitness Functions", adj = 0)
ci <- seq(from = 0.223786, to = 0.325956, length.out = 3)
y <- rep(-10, times = length(ci))
lines(x=ci, y = y, lwd = 8, col = rgb(0,0,0,0.25))
abline(v = 0.223786, lty = 2, col = rgb(0,0,0,0.25), lwd = 0.5)
abline(v = 0.325956, lty = 2, col = rgb(0,0,0,0.25), lwd = 0.5)
# directional
ci <- seq(from = 0.300193, to = 0.406439, length.out = 3)
y <- rep(-9.5, times = length(ci))
lines(x = ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[4])
# stabilizing
ci <- seq(from = 0.297201, to = 0.402461, length.out = 3)
y <- rep(-9, times = length(ci))
lines(x = ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[10])
# truncating
ci <- seq(from = 0.314602, to = 0.418423, length.out = 3)
y <- rep(-8.5, times = length(ci))
lines(x = ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[5])
rangesdatadd <- data.frame(title = rep(c("121 Haplotype Blocks. Quantative Fitness Functions"), times = 4),
xmin = c(0.223786, 0.300193, 0.297201, 0.314602),
xmax = c(0.325956, 0.406439, 0.402461, 0.418423),
y = c(-10, -9.5, -9, -8.5),
fitfun = c("Initial",
"Directional QT",
"Truncating QT",
"Stabilizing QT"))
rangesdat <- rbind(rangesdat, rangesdatadd)
vlinesdatadd <- data.frame(title = rep("121 Haplotype Blocks. Quantative Fitness Functions", times = 2),
xint = c(0.223786, 0.325956),
fitfun = rep("Initial", times = 2))
vlinesdat <- rbind(vlinesdat, vlinesdatadd)
rm(list = ls()[-c(7,11,18)])
nmuts <- 1:121
x <- nmuts / 121
a <- 8
positive <- 1.13^(nmuts) * exp(8 * x^2)
multiplicative <- 1.13^nmuts
negative <- 1.13^(nmuts) * exp(-8 * x^2)
lb <- min(positive, negative, multiplicative)
ub <- max(positive, negative, multiplicative)
positive <- positive / max(positive[1:121])
multiplicative <- multiplicative / max(multiplicative[1:121])
negative <- negative / max(negative[1:121])
linesdatadd <- data.frame(title = rep("4977 SNPs on 121 Haplotype Blocks. Multiplicative Fitness Functions", times = 121),
relfit = c(positive, multiplicative, negative),
pheno = rep(x, times = 3),
fitfun = rep(c("Positive Epistasis",
"Multiplicative",
"Negative"), each = 121))
linesdat <- rbind(linesdat, linesdatadd)
plot(x = x, y =  log10(positive), col = turbo(11)[8], type = "l" , xlab = "Phenotype",
ylab = "log(Relative Fitness)", lwd = 2,
xlim = c(0, 1), cex.lab = 1.25, cex.axis = 1.5, ylim = c(-10,0))
lines(x = x, y =  log10(multiplicative), col = turbo(11)[6], lwd = 2)
lines(x = x, y =  log10(negative), col = turbo(11)[2], lwd = 2)
title("4977 SNPs on 121 Haplotype Blocks. Multiplicative Fitness Functions", adj = 0)
ci <- seq(from = 0.392263, to = 0.403815, length.out = 3)
y <- rep(-10, times = length(ci))
lines(x=ci, y = y, lwd = 8, col = rgb(0,0,0,0.25))
abline(v = 0.392263, lty = 2, col = rgb(0,0,0,0.25), lwd = 0.5)
abline(v = 0.403815, lty = 2, col = rgb(0,0,0,0.25), lwd = 0.5)
# positive
ci <- seq(from = 0.433199, to = 0.443856, length.out = 3)
y <- rep(-8.5, times = length(ci))
lines(x=ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[8])
# mult
ci <- seq(from = 0.432522, to = 0.444504, length.out = 3)
y <- rep(-9, times = length(ci))
lines(x=ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[6])
# negative
ci <- seq(from = 0.430782,to = 0.441271, length.out = 3)
y <- rep(-9.5, times = length(ci))
lines(x=ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[2])
rangesdatadd <- data.frame(title = rep("4977 SNPs on 121 Haplotype Blocks. Multiplicative Fitness Functions", times = 4),
xmin = c(0.392263, 0.433199, 0.432522, 0.430782),
xmax = c(0.403815, 0.443856, 0.444504, 0.441271),
y = c(-10, -8.5, -9, -9.5),
fitfun = c("Initial",
"Positive Epistasis",
"Multiplicative",
"Negative Epistasis"))
rangesdat <- rbind(rangesdat, rangesdatadd)
vlinesdatadd <- data.frame(title = rep("4977 SNPs on 121 Haplotype Blocks. Multiplicative Fitness Functions", times = 2),
xint = c(0.392263, 0.403815),
fitfun = rep("Initial", times = 2))
vlinesdat <- rbind(vlinesdat, vlinesdatadd)
rm(list = ls()[-c(4,10,13)])
x <- seq(from = 0, to = 1, length.out = 200)
fmin = 0
fmax = 1
b <- -0.41
s <- 0.1
r <- -75
DirectionalEpistasis = fmin + ((fmax - fmin) / ((1 + s * exp(r *(x + b))) ^(1/s)));
a <- 40
b <- -0.395
tmp = fmin + (fmax - fmin) * (1 - 1 / exp(a * (x + b)));
tmp[tmp < 0.0] = 1e-30;
TruncatingEpistasis = tmp;
mu <- 0.435
std <- 0.0175
StabilizingEpistasis = exp(-0.5 * ((x - mu)^2 / std ^ 2));
linesdatadd <- data.frame(title = rep("4977 SNPs on 121 Haplotype Blocks. Quantative Fitness Functions", times = (3 * 200)),
relfit = c(DirectionalEpistasis, TruncatingEpistasis, StabilizingEpistasis),
pheno = rep(x, times = 3),
fitfun = rep(c("Directional QT",
"Truncating QT",
"Stabilizing QT"), each = 200))
linesdat <- rbind(linesdat, linesdatadd)
plot(x = x, y =  log10(DirectionalEpistasis), type = "l", col = turbo(11)[4],
xlab = "Phenotype", ylab = "log(Relative Fitness)", lwd = 2,
ylim = c(-10,0), cex.lab = 1.25, cex.axis = 1.5, xlim = c(0, 1))
lines(x = x, y =  log10(TruncatingEpistasis), col = turbo(11)[5], lwd = 2)
lines(x = x, y =  log10(StabilizingEpistasis), col = turbo(11)[10], lwd = 2)
title("4977 SNPs on 121 Haplotype Blocks. Quantative Fitness Functions", adj = 0)
legend("bottomright", legend = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT",
"Initial Distribution"),
col = c(turbo(11)[c(6,8,2,4,5,10)], rgb(0,0,0,0.25)),
lwd = c(2,2,2,2,2,2,8),
bg = "white", cex = 1)
ci <- seq(from = 0.392263, to = 0.403815, length.out = 3)
y <- rep(-10, times = length(ci))
lines(x=ci, y = y, lwd = 8, col = rgb(0,0,0,0.25))
abline(v = 0.392263, lty = 2, col = rgb(0,0,0,0.25), lwd = 0.5)
abline(v = 0.403815, lty = 2, col = rgb(0,0,0,0.25), lwd = 0.5)
# dir
ci <- seq(from = 0.401406, to = 0.412646, length.out = 3)
y <- rep(-9.5, times = length(ci))
lines(x = ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[4])
# stab
ci <- seq(from = 0.401266, to = 0.412542, length.out = 3)
y <- rep(-9, times = length(ci))
lines(x = ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[10])
# trunc
ci <- seq(from = 0.401696, to = 0.412732, length.out = 3)
y <- rep(-8.5, times = length(ci))
lines(x = ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[5])
rangesdatadd <- data.frame(title = rep(c("4977 SNPs on 121 Haplotype Blocks. Quantative Fitness Functions"), times = 4),
xmin = c(0.392263, 0.401406, 0.401266, 0.401696),
xmax = c(0.403815, 0.412646, 0.412542, 0.412732),
y = c(-10, -9.5, -9, -8.5),
fitfun = c("Initial",
"Directional QT",
"Truncating QT",
"Stabilizing QT"))
rangesdat <- rbind(rangesdat, rangesdatadd)
vlinesdatadd <- data.frame(title = rep("4977 SNPs on 121 Haplotype Blocks. Quantative Fitness Functions", times = 2),
xint = c(0.392263, 0.403815),
fitfun = rep("Initial", times = 2))
vlinesdat <- rbind(vlinesdat, vlinesdatadd)
rm(list = ls()[-c(7,11,18)])
linesdat$fitfun <- factor(linesdat$fitfun,
levels = c("Multiplicative",
"Positive Epistasis",
"Negative",
"Directional QT",
"Truncating QT",
"Stabilizing QT"),
labels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT"))
rangesdat$fitfun <- factor(rangesdat$fitfun,
levels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT"),
labels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT"))
vlinesdat$fitfun <- factor(vlinesdat$fitfun,
levels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT"),
labels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT"))
nmuts <- 1:121
x <- nmuts / 121
positive <- 1.13^(nmuts) * exp(8 * x^2)
multiplicative <- 1.13^nmuts
negative <- 1.13^(nmuts) * exp(-8 * x^2)
lb <- min(positive, negative, multiplicative)
ub <- max(positive, negative, multiplicative)
positive <- positive / max(positive)
multiplicative <- multiplicative / max(multiplicative)
negative <- negative / max(negative)
###################################
linesdat = data.frame(title = rep(c("121 Haplotype Blocks. Multiplicative Fitness Functions"), times = (3 * 121)),
relfit = c(positive, multiplicative, negative),
pheno = rep(x, times = 3),
fitfun = rep(c("Positive Epistasis",
"Multiplicative",
"Negative"), each = 121))
###################################
plot(x = x, y = log10(positive), col = turbo(11)[8], type = "l" , xlab = "Phenotype",
ylab = "log(Relative Fitness)", lwd = 2, ylim = c(-10,0), cex.lab = 1.25,
cex.axis = 1.5)
lines(x = x, y = log10(multiplicative), col = turbo(11)[6], lwd = 2)
lines(x = x, y = log10(negative), col = turbo(11)[2], lwd = 2)
title("121 Haplotype Blocks. Multiplicative Fitness Functions", adj = 0)
ci <- seq(from = 0.223786, to = 0.325956, length.out = 3)
y <- rep(-10, times = length(ci))
lines(x=ci, y = y, lwd = 8, col = rgb(0,0,0,0.25))
abline(v = 0.223786, lty = 2, col = rgb(0,0,0,0.25), lwd = 0.5)
abline(v = 0.325956, lty = 2, col = rgb(0,0,0,0.25), lwd = 0.5)
# positive
ci <- seq(from = 0.380902, to = 0.495603, length.out = 3)
y <- rep(-8.5, times = length(ci))
lines(x=ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[8])
# multiplicative
ci <- seq(from = 0.331542, to = 0.445071, length.out = 3)
y <- rep(-9, times = length(ci))
lines(x=ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[6])
# negative
ci <- seq(from = 0.29318, to = 0.402245, length.out = 3)
y <- rep(-9.5, times = length(ci))
lines(x=ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[2])
###################################
rangesdat <- data.frame(title = rep(c("121 Haplotype Blocks. Multiplicative Fitness Functions"), times = 4),
xmin = c(0.223786, 0.380902, 0.331542, 0.29318),
xmax = c(0.325956, 0.495603, 0.445071, 0.402245),
y = c(-10, -8.5, -9, -9.5),
fitfun = c("Initial",
"Positive Epistasis",
"Multiplicative",
"Negative Epistasis"))
vlinesdat <- data.frame(title = rep(c("121 Haplotype Blocks. Multiplicative Fitness Functions"), times = 2),
xint = c(0.223786, 0.325956),
fitfun = rep("Initial", times = 2))
rm(list = ls()[-c(3,8,10)])
###################################
x <- seq(from = 0, to = 1, length.out = 200)
fmin = 0
fmax = 1
b <- -0.3
s <- 0.1
r <- -15
DirectionalEpistasis = fmin + ((fmax - fmin) / ((1 + s * exp(r *(x + b))) ^(1/s)));
a <- 10
b <- -0.25
tmp = fmin + (fmax - fmin) * (1 - 1 / exp(a * (x + b)));
tmp[tmp < 0.0] = 1e-30;
TruncatingEpistasis = tmp;
mu <- 0.4
std <- 0.07
StabilizingEpistasis = exp(-0.5 * ((x - mu)^2 / std ^ 2));
linesdatadd <- data.frame(title = rep("121 Haplotype Blocks. Quantative Fitness Functions", times = (3 * 200)),
relfit = c(DirectionalEpistasis, TruncatingEpistasis, StabilizingEpistasis),
pheno = rep(x, times = 3),
fitfun = rep(c("Directional QT",
"Truncating QT",
"Stabilizing QT"), each = 200))
linesdat <- rbind(linesdat, linesdatadd)
plot(x = x, y = log10(DirectionalEpistasis), type = "l", col = turbo(11)[4],
xlab = "Phenotype", ylab = "log(Relative Fitness)", lwd = 2,
ylim = c(-10,0), cex.lab = 1.25, cex.axis = 1.5)
lines(x = x, y = log10(TruncatingEpistasis), col = turbo(11)[5], lwd = 2)
lines(x = x, y = log10(StabilizingEpistasis), col = turbo(11)[10], lwd = 2)
title("121 Haplotype Blocks. Quantative Fitness Functions", adj = 0)
ci <- seq(from = 0.223786, to = 0.325956, length.out = 3)
y <- rep(-10, times = length(ci))
lines(x=ci, y = y, lwd = 8, col = rgb(0,0,0,0.25))
abline(v = 0.223786, lty = 2, col = rgb(0,0,0,0.25), lwd = 0.5)
abline(v = 0.325956, lty = 2, col = rgb(0,0,0,0.25), lwd = 0.5)
# directional
ci <- seq(from = 0.300193, to = 0.406439, length.out = 3)
y <- rep(-9.5, times = length(ci))
lines(x = ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[4])
# stabilizing
ci <- seq(from = 0.297201, to = 0.402461, length.out = 3)
y <- rep(-9, times = length(ci))
lines(x = ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[10])
# truncating
ci <- seq(from = 0.314602, to = 0.418423, length.out = 3)
y <- rep(-8.5, times = length(ci))
lines(x = ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[5])
rangesdatadd <- data.frame(title = rep(c("121 Haplotype Blocks. Quantative Fitness Functions"), times = 4),
xmin = c(0.223786, 0.300193, 0.297201, 0.314602),
xmax = c(0.325956, 0.406439, 0.402461, 0.418423),
y = c(-10, -9.5, -9, -8.5),
fitfun = c("Initial",
"Directional QT",
"Truncating QT",
"Stabilizing QT"))
rangesdat <- rbind(rangesdat, rangesdatadd)
vlinesdatadd <- data.frame(title = rep("121 Haplotype Blocks. Quantative Fitness Functions", times = 2),
xint = c(0.223786, 0.325956),
fitfun = rep("Initial", times = 2))
vlinesdat <- rbind(vlinesdat, vlinesdatadd)
rm(list = ls()[-c(7,11,18)])
nmuts <- 1:121
x <- nmuts / 121
a <- 8
positive <- 1.13^(nmuts) * exp(8 * x^2)
multiplicative <- 1.13^nmuts
negative <- 1.13^(nmuts) * exp(-8 * x^2)
lb <- min(positive, negative, multiplicative)
ub <- max(positive, negative, multiplicative)
positive <- positive / max(positive[1:121])
multiplicative <- multiplicative / max(multiplicative[1:121])
negative <- negative / max(negative[1:121])
linesdatadd <- data.frame(title = rep("4977 SNPs on 121 Haplotype Blocks. Multiplicative Fitness Functions", times = 121),
relfit = c(positive, multiplicative, negative),
pheno = rep(x, times = 3),
fitfun = rep(c("Positive Epistasis",
"Multiplicative",
"Negative"), each = 121))
linesdat <- rbind(linesdat, linesdatadd)
plot(x = x, y =  log10(positive), col = turbo(11)[8], type = "l" , xlab = "Phenotype",
ylab = "log(Relative Fitness)", lwd = 2,
xlim = c(0, 1), cex.lab = 1.25, cex.axis = 1.5, ylim = c(-10,0))
lines(x = x, y =  log10(multiplicative), col = turbo(11)[6], lwd = 2)
lines(x = x, y =  log10(negative), col = turbo(11)[2], lwd = 2)
title("4977 SNPs on 121 Haplotype Blocks. Multiplicative Fitness Functions", adj = 0)
ci <- seq(from = 0.392263, to = 0.403815, length.out = 3)
y <- rep(-10, times = length(ci))
lines(x=ci, y = y, lwd = 8, col = rgb(0,0,0,0.25))
abline(v = 0.392263, lty = 2, col = rgb(0,0,0,0.25), lwd = 0.5)
abline(v = 0.403815, lty = 2, col = rgb(0,0,0,0.25), lwd = 0.5)
# positive
ci <- seq(from = 0.433199, to = 0.443856, length.out = 3)
y <- rep(-8.5, times = length(ci))
lines(x=ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[8])
# mult
ci <- seq(from = 0.432522, to = 0.444504, length.out = 3)
y <- rep(-9, times = length(ci))
lines(x=ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[6])
# negative
ci <- seq(from = 0.430782,to = 0.441271, length.out = 3)
y <- rep(-9.5, times = length(ci))
lines(x=ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[2])
rangesdatadd <- data.frame(title = rep("4977 SNPs on 121 Haplotype Blocks. Multiplicative Fitness Functions", times = 4),
xmin = c(0.392263, 0.433199, 0.432522, 0.430782),
xmax = c(0.403815, 0.443856, 0.444504, 0.441271),
y = c(-10, -8.5, -9, -9.5),
fitfun = c("Initial",
"Positive Epistasis",
"Multiplicative",
"Negative Epistasis"))
rangesdat <- rbind(rangesdat, rangesdatadd)
vlinesdatadd <- data.frame(title = rep("4977 SNPs on 121 Haplotype Blocks. Multiplicative Fitness Functions", times = 2),
xint = c(0.392263, 0.403815),
fitfun = rep("Initial", times = 2))
vlinesdat <- rbind(vlinesdat, vlinesdatadd)
rm(list = ls()[-c(4,10,13)])
x <- seq(from = 0, to = 1, length.out = 200)
fmin = 0
fmax = 1
b <- -0.41
s <- 0.1
r <- -75
DirectionalEpistasis = fmin + ((fmax - fmin) / ((1 + s * exp(r *(x + b))) ^(1/s)));
a <- 40
b <- -0.395
tmp = fmin + (fmax - fmin) * (1 - 1 / exp(a * (x + b)));
tmp[tmp < 0.0] = 1e-30;
TruncatingEpistasis = tmp;
mu <- 0.435
std <- 0.0175
StabilizingEpistasis = exp(-0.5 * ((x - mu)^2 / std ^ 2));
linesdatadd <- data.frame(title = rep("4977 SNPs on 121 Haplotype Blocks. Quantative Fitness Functions", times = (3 * 200)),
relfit = c(DirectionalEpistasis, TruncatingEpistasis, StabilizingEpistasis),
pheno = rep(x, times = 3),
fitfun = rep(c("Directional QT",
"Truncating QT",
"Stabilizing QT"), each = 200))
linesdat <- rbind(linesdat, linesdatadd)
plot(x = x, y =  log10(DirectionalEpistasis), type = "l", col = turbo(11)[4],
xlab = "Phenotype", ylab = "log(Relative Fitness)", lwd = 2,
ylim = c(-10,0), cex.lab = 1.25, cex.axis = 1.5, xlim = c(0, 1))
lines(x = x, y =  log10(TruncatingEpistasis), col = turbo(11)[5], lwd = 2)
lines(x = x, y =  log10(StabilizingEpistasis), col = turbo(11)[10], lwd = 2)
title("4977 SNPs on 121 Haplotype Blocks. Quantative Fitness Functions", adj = 0)
legend("bottomright", legend = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT",
"Initial Distribution"),
col = c(turbo(11)[c(6,8,2,4,5,10)], rgb(0,0,0,0.25)),
lwd = c(2,2,2,2,2,2,8),
bg = "white", cex = 1)
ci <- seq(from = 0.392263, to = 0.403815, length.out = 3)
y <- rep(-10, times = length(ci))
lines(x=ci, y = y, lwd = 8, col = rgb(0,0,0,0.25))
abline(v = 0.392263, lty = 2, col = rgb(0,0,0,0.25), lwd = 0.5)
abline(v = 0.403815, lty = 2, col = rgb(0,0,0,0.25), lwd = 0.5)
# dir
ci <- seq(from = 0.401406, to = 0.412646, length.out = 3)
y <- rep(-9.5, times = length(ci))
lines(x = ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[4])
# stab
ci <- seq(from = 0.401266, to = 0.412542, length.out = 3)
y <- rep(-9, times = length(ci))
lines(x = ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[10])
# trunc
ci <- seq(from = 0.401696, to = 0.412732, length.out = 3)
y <- rep(-8.5, times = length(ci))
lines(x = ci, y = y, lwd = 8, col = turbo(11, alpha = 0.25)[5])
rangesdatadd <- data.frame(title = rep(c("4977 SNPs on 121 Haplotype Blocks. Quantative Fitness Functions"), times = 4),
xmin = c(0.392263, 0.401406, 0.401266, 0.401696),
xmax = c(0.403815, 0.412646, 0.412542, 0.412732),
y = c(-10, -9.5, -9, -8.5),
fitfun = c("Initial",
"Directional QT",
"Truncating QT",
"Stabilizing QT"))
rangesdat <- rbind(rangesdat, rangesdatadd)
vlinesdatadd <- data.frame(title = rep("4977 SNPs on 121 Haplotype Blocks. Quantative Fitness Functions", times = 2),
xint = c(0.392263, 0.403815),
fitfun = rep("Initial", times = 2))
vlinesdat <- rbind(vlinesdat, vlinesdatadd)
rm(list = ls()[-c(7,11,18)])
linesdat$fitfun <- factor(linesdat$fitfun,
levels = c("Multiplicative",
"Positive Epistasis",
"Negative",
"Directional QT",
"Truncating QT",
"Stabilizing QT"),
labels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT"))
rangesdat$fitfun <- factor(rangesdat$fitfun,
levels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT"),
labels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT"))
vlinesdat$fitfun <- factor(vlinesdat$fitfun,
levels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT"),
labels = c("Multiplicative",
"Positive Epistasis",
"Negative Epistasis",
"Directional QT",
"Truncating QT",
"Stabilizing QT"))
ggplot(linesdat, aes(y=log10(relfit), x=pheno)) +
geom_line(aes(colour=fitfun),
stat="identity",
position="identity",
alpha=0.6,
size = 1.25) +
facet_wrap(~ title) +
theme_bw() +
theme(text=element_text(family="sans",
face="plain",
color="#000000",
size=15,
hjust=0.5,
vjust=0.5)) +
xlab("Phenotype") +
ylab("log(Relative Fitness)") +
theme(panel.grid = element_blank()) +
guides(color=guide_legend(title="Fitness Function")) +
coord_cartesian(ylim = c(-10,0), clip = 'on') +
geom_vline(data = vlinesdat, aes(color = fitfun,
xintercept=xint),
linetype="dashed") +
scale_color_manual("Group",values=c(turbo(11)[c(6,8,2,4,5,10)], rgb(0,0,0,0.15)),
limits = c(as.character(sort(unique(linesdat$fitfun))),
"Initial")) +
geom_segment(data = rangesdat, aes(color = fitfun,
x = xmin,
xend = xmax,
y = y,
yend = y),
size = 3,
lineend = "round")
